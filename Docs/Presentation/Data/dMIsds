{{{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, (-3 + d)/s1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, (-8 + 3*d)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 
   (8*s1 - 3*d*s1 + 8*s2 - 3*d*s2 - 8*s3 + 3*d*s3)/
    (2*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 
   (-4*s1 + d*s1 + 4*s2 - d*s2 + 4*s3 - d*s3)/
    (2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-4*s1*s2 + d*s1*s2 + 4*s2^2 - d*s2^2 - 4*s2*s3 + d*s2*s3)/
    (2*(-3 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, (240*s1 - 242*d*s1 + 81*d^2*s1 - 9*d^3*s1 + 
     240*s2 - 242*d*s2 + 81*d^2*s2 - 9*d^3*s2 - 240*s3 + 242*d*s3 - 
     81*d^2*s3 + 9*d^3*s3)/(2*(-4 + d)*s1*s2*(s1^2 - 2*s1*s2 + s2^2 - 
      2*s1*s3 - 2*s2*s3 + s3^2)), (-240 + 242*d - 81*d^2 + 9*d^3)/
    ((-4 + d)*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 
   (-30*s1 + 19*d*s1 - 3*d^2*s1 + 30*s2 - 19*d*s2 + 3*d^2*s2 - 30*s3 + 
     19*d*s3 - 3*d^2*s3)/(2*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), (2*s1^2 - d*s1^2 + 6*s1*s2 - d*s1*s2 - 8*s2^2 + 2*d*s2^2 + 
     6*s1*s3 - d*s1*s3 + 16*s2*s3 - 4*d*s2*s3 - 8*s3^2 + 2*d*s3^2)/
    (2*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {(-8 + 3*d)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
     s3^2), 0, (8*s1 - 3*d*s1 - 8*s2 + 3*d*s2 + 8*s3 - 3*d*s3)/
    (2*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 
   (-4*s1 + d*s1 + 4*s2 - d*s2 + 4*s3 - d*s3)/
    (2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-4*s1*s3 + d*s1*s3 - 4*s2*s3 + d*s2*s3 + 4*s3^2 - d*s3^2)/
    (2*(-3 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 
   0, 0, 0, 0, 0}, {(240*s1 - 242*d*s1 + 81*d^2*s1 - 9*d^3*s1 - 240*s2 + 
     242*d*s2 - 81*d^2*s2 + 9*d^3*s2 + 240*s3 - 242*d*s3 + 81*d^2*s3 - 
     9*d^3*s3)/(2*(-4 + d)*s1*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), 0, (-240 + 242*d - 81*d^2 + 9*d^3)/
    ((-4 + d)*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 
   0, (-30*s1 + 19*d*s1 - 3*d^2*s1 - 30*s2 + 19*d*s2 - 3*d^2*s2 + 30*s3 - 
     19*d*s3 + 3*d^2*s3)/(2*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), (2*s1^2 - d*s1^2 + 6*s1*s2 - d*s1*s2 - 8*s2^2 + 2*d*s2^2 + 
     6*s1*s3 - d*s1*s3 + 16*s2*s3 - 4*d*s2*s3 - 8*s3^2 + 2*d*s3^2)/
    (2*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, (-4 + d)/(2*s1), 0, 0, 0, 0, 0, 0, 0}, 
  {(8*s1 - 3*d*s1 + 8*s2 - 3*d*s2 - 8*s3 + 3*d*s3)/
    (2*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (8*s1 - 3*d*s1 - 8*s2 + 3*d*s2 + 8*s3 - 3*d*s3)/
    (2*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 0, 0, 
   0, 0, (-8*s1^2 + 2*d*s1^2 + 12*s1*s2 - 3*d*s1*s2 - 4*s2^2 + d*s2^2 + 
     12*s1*s3 - 3*d*s1*s3 + 8*s2*s3 - 2*d*s2*s3 - 4*s3^2 + d*s3^2)/
    (2*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (4*s2*s3 - d*s2*s3)/((-3 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), 0, 0, 0, 0, 0}, 
  {(240*s1 - 242*d*s1 + 81*d^2*s1 - 9*d^3*s1 - 240*s2 + 242*d*s2 - 
     81*d^2*s2 + 9*d^3*s2 + 240*s3 - 242*d*s3 + 81*d^2*s3 - 9*d^3*s3)/
    (2*(-4 + d)*s1*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (240*s1 - 242*d*s1 + 81*d^2*s1 - 9*d^3*s1 + 240*s2 - 242*d*s2 + 
     81*d^2*s2 - 9*d^3*s2 - 240*s3 + 242*d*s3 - 81*d^2*s3 + 9*d^3*s3)/
    (2*(-4 + d)*s1*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 
   0, 0, 0, 0, 0, 0, (30 - 19*d + 3*d^2)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
     2*s2*s3 + s3^2), (6*s1^2 - 2*d*s1^2 - 2*s1*s2 + d*s1*s2 - 4*s2^2 + 
     d*s2^2 - 2*s1*s3 + d*s1*s3 + 8*s2*s3 - 2*d*s2*s3 - 4*s3^2 + d*s3^2)/
    (2*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-4 + d)/(2*s1), 0, 0, 0, 0}, 
  {0, 0, 0, (4*(9 - 6*d + d^2))/((-4 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), (-2*(30 - 19*d + 3*d^2))/
    ((-4 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-s1 - s2 + s3)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 
   (-2*(30 - 19*d + 3*d^2))/((-4 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), (-s1 + s2 - s3)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
     2*s2*s3 + s3^2), 0, 0, 0, 0, (3*s1 - d*s1 - 3*s2 + d*s2 - 3*s3 + d*s3)/
    (s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 0, 0, 0}, 
  {0, 0, 0, 0, (30*s1 - 19*d*s1 + 3*d^2*s1 + 30*s2 - 19*d*s2 + 3*d^2*s2 - 
     30*s3 + 19*d*s3 - 3*d^2*s3)/((-4 + d)*s1*(s1^2 - 2*s1*s2 + s2^2 - 
      2*s1*s3 - 2*s2*s3 + s3^2)), (2*s2)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
     2*s2*s3 + s3^2), 0, 0, (-2*(9*s1 - 6*d*s1 + d^2*s1 + 9*s2 - 6*d*s2 + 
      d^2*s2 - 9*s3 + 6*d*s3 - d^2*s3))/((-4 + d)*s1*
     (s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (30*s1 - 19*d*s1 + 3*d^2*s1 + 30*s2 - 19*d*s2 + 3*d^2*s2 - 30*s3 + 
     19*d*s3 - 3*d^2*s3)/((-4 + d)*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), (-(s1*s2) + s2^2 - s2*s3)/
    (s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 
   (-s1^2 + 5*s1*s2 - d*s1*s2 - 4*s2^2 + d*s2^2 + 5*s1*s3 - d*s1*s3 + 
     8*s2*s3 - 2*d*s2*s3 - 4*s3^2 + d*s3^2)/
    (s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0}, 
  {0, 0, 0, 0, 0, 0, (30*s1 - 19*d*s1 + 3*d^2*s1 - 30*s2 + 19*d*s2 - 
     3*d^2*s2 + 30*s3 - 19*d*s3 + 3*d^2*s3)/
    ((-4 + d)*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (2*s3)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 0, 
   (30*s1 - 19*d*s1 + 3*d^2*s1 - 30*s2 + 19*d*s2 - 3*d^2*s2 + 30*s3 - 
     19*d*s3 + 3*d^2*s3)/((-4 + d)*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), (-(s1*s3) - s2*s3 + s3^2)/
    (s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-2*(9*s1 - 6*d*s1 + d^2*s1 - 9*s2 + 6*d*s2 - d^2*s2 + 9*s3 - 6*d*s3 + 
      d^2*s3))/((-4 + d)*s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), 0, 0, (-s1^2 + 5*s1*s2 - d*s1*s2 - 4*s2^2 + d*s2^2 + 5*s1*s3 - 
     d*s1*s3 + 8*s2*s3 - 2*d*s2*s3 - 4*s3^2 + d*s3^2)/
    (s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0}, 
  {0, 0, 0, 0, 0, (4*(s1 - s2 + s3))/(s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), 0, (4*(s1 + s2 - s3))/
    (s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 
   -8/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 0, 
   (-4*(-4 + d))/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 
   (2*(-4*s1 + d*s1 - 4*s2 + d*s2 + 4*s3 - d*s3))/
    (s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (2*(-4*s1 + d*s1 + 4*s2 - d*s2 - 4*s3 + d*s3))/
    (s1*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-6*s1 + d*s1 + 6*s2 - d*s2 + 6*s3 - d*s3)/(s1^2 - 2*s1*s2 + s2^2 - 
     2*s1*s3 - 2*s2*s3 + s3^2)}}, {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, (-3 + d)/s2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, (-4 + d)/(2*s2), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, (8*s1 - 3*d*s1 + 8*s2 - 3*d*s2 - 8*s3 + 3*d*s3)/
    (2*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-8 + 3*d)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 0, 
   (4*s1 - d*s1 - 4*s2 + d*s2 + 4*s3 - d*s3)/
    (2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (4*s1^2 - d*s1^2 - 4*s1*s2 + d*s1*s2 - 4*s1*s3 + d*s1*s3)/
    (2*(-3 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0}, {0, (-240 + 242*d - 81*d^2 + 9*d^3)/
    ((-4 + d)*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (240*s1 - 242*d*s1 + 81*d^2*s1 - 9*d^3*s1 + 240*s2 - 242*d*s2 + 
     81*d^2*s2 - 9*d^3*s2 - 240*s3 + 242*d*s3 - 81*d^2*s3 + 9*d^3*s3)/
    (2*(-4 + d)*s1*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 
   (30*s1 - 19*d*s1 + 3*d^2*s1 - 30*s2 + 19*d*s2 - 3*d^2*s2 - 30*s3 + 
     19*d*s3 - 3*d^2*s3)/(2*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), (-8*s1^2 + 2*d*s1^2 + 6*s1*s2 - d*s1*s2 + 2*s2^2 - d*s2^2 + 
     16*s1*s3 - 4*d*s1*s3 + 6*s2*s3 - d*s2*s3 - 8*s3^2 + 2*d*s3^2)/
    (2*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {(8*s1 - 3*d*s1 + 8*s2 - 3*d*s2 - 8*s3 + 3*d*s3)/
    (2*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 
   (-8*s1 + 3*d*s1 + 8*s2 - 3*d*s2 + 8*s3 - 3*d*s3)/
    (2*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 
   (-4*s1^2 + d*s1^2 + 12*s1*s2 - 3*d*s1*s2 - 8*s2^2 + 2*d*s2^2 + 8*s1*s3 - 
     2*d*s1*s3 + 12*s2*s3 - 3*d*s2*s3 - 4*s3^2 + d*s3^2)/
    (2*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (4*s1*s3 - d*s1*s3)/((-3 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), 0, 0, 0, 0, 0, 0, 0, 0}, 
  {(-240*s1 + 242*d*s1 - 81*d^2*s1 + 9*d^3*s1 + 240*s2 - 242*d*s2 + 
     81*d^2*s2 - 9*d^3*s2 + 240*s3 - 242*d*s3 + 81*d^2*s3 - 9*d^3*s3)/
    (2*(-4 + d)*s2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 
   (240*s1 - 242*d*s1 + 81*d^2*s1 - 9*d^3*s1 + 240*s2 - 242*d*s2 + 
     81*d^2*s2 - 9*d^3*s2 - 240*s3 + 242*d*s3 - 81*d^2*s3 + 9*d^3*s3)/
    (2*(-4 + d)*s1*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 
   0, 0, (30 - 19*d + 3*d^2)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
     s3^2), (-4*s1^2 + d*s1^2 - 2*s1*s2 + d*s1*s2 + 6*s2^2 - 2*d*s2^2 + 
     8*s1*s3 - 2*d*s1*s3 - 2*s2*s3 + d*s2*s3 - 4*s3^2 + d*s3^2)/
    (2*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {(-8 + 3*d)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 
   ((-8 + 3*d)*(s1 - s2 - s3))/(2*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), 0, 0, 0, 0, 0, 0, 0, 
   (4*s1 - d*s1 - 4*s2 + d*s2 + 4*s3 - d*s3)/
    (2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-4*s1*s3 + d*s1*s3 - 4*s2*s3 + d*s2*s3 + 4*s3^2 - d*s3^2)/
    (2*(-3 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 
   0, 0}, {(-240*s1 + 242*d*s1 - 81*d^2*s1 + 9*d^3*s1 + 240*s2 - 242*d*s2 + 
     81*d^2*s2 - 9*d^3*s2 + 240*s3 - 242*d*s3 + 81*d^2*s3 - 9*d^3*s3)/
    (2*(-4 + d)*s2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-240 + 242*d - 81*d^2 + 9*d^3)/((-4 + d)*s2*(s1^2 - 2*s1*s2 + s2^2 - 
      2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 0, 0, 0, 0, 
   (-30*s1 + 19*d*s1 - 3*d^2*s1 - 30*s2 + 19*d*s2 - 3*d^2*s2 + 30*s3 - 
     19*d*s3 + 3*d^2*s3)/(2*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), (-8*s1^2 + 2*d*s1^2 + 6*s1*s2 - d*s1*s2 + 2*s2^2 - d*s2^2 + 
     16*s1*s3 - 4*d*s1*s3 + 6*s2*s3 - d*s2*s3 - 8*s3^2 + 2*d*s3^2)/
    (2*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-4 + d)/(2*s2), 0, 0, 0, 0}, 
  {0, 0, 0, (-2*(9*s1 - 6*d*s1 + d^2*s1 + 9*s2 - 6*d*s2 + d^2*s2 - 9*s3 + 
      6*d*s3 - d^2*s3))/((-4 + d)*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), (30*s1 - 19*d*s1 + 3*d^2*s1 + 30*s2 - 19*d*s2 + 
     3*d^2*s2 - 30*s3 + 19*d*s3 - 3*d^2*s3)/
    ((-4 + d)*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (2*s1)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 
   (30*s1 - 19*d*s1 + 3*d^2*s1 + 30*s2 - 19*d*s2 + 3*d^2*s2 - 30*s3 + 
     19*d*s3 - 3*d^2*s3)/((-4 + d)*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), (s1^2 - s1*s2 - s1*s3)/
    (s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 0, 
   (-4*s1^2 + d*s1^2 + 5*s1*s2 - d*s1*s2 - s2^2 + 8*s1*s3 - 2*d*s1*s3 + 
     5*s2*s3 - d*s2*s3 - 4*s3^2 + d*s3^2)/
    (s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0}, 
  {0, 0, 0, 0, (-2*(30 - 19*d + 3*d^2))/
    ((-4 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-s1 - s2 + s3)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 0, 0, 
   (4*(9 - 6*d + d^2))/((-4 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), (-2*(30 - 19*d + 3*d^2))/((-4 + d)*(s1^2 - 2*s1*s2 + s2^2 - 
      2*s1*s3 - 2*s2*s3 + s3^2)), (s1 - s2 - s3)/(s1^2 - 2*s1*s2 + s2^2 - 
     2*s1*s3 - 2*s2*s3 + s3^2), 0, 0, (-3*s1 + d*s1 + 3*s2 - d*s2 - 3*s3 + 
     d*s3)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 0, 0}, 
  {0, 0, 0, 0, 0, 0, (-30*s1 + 19*d*s1 - 3*d^2*s1 + 30*s2 - 19*d*s2 + 
     3*d^2*s2 + 30*s3 - 19*d*s3 + 3*d^2*s3)/
    ((-4 + d)*s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-(s1*s3) - s2*s3 + s3^2)/(s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), 0, (-30*s1 + 19*d*s1 - 3*d^2*s1 + 30*s2 - 19*d*s2 + 3*d^2*s2 + 
     30*s3 - 19*d*s3 + 3*d^2*s3)/((-4 + d)*s2*(s1^2 - 2*s1*s2 + s2^2 - 
      2*s1*s3 - 2*s2*s3 + s3^2)), (2*s3)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
     2*s2*s3 + s3^2), (2*(9*s1 - 6*d*s1 + d^2*s1 - 9*s2 + 6*d*s2 - d^2*s2 - 
      9*s3 + 6*d*s3 - d^2*s3))/((-4 + d)*s2*(s1^2 - 2*s1*s2 + s2^2 - 
      2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 
   (-4*s1^2 + d*s1^2 + 5*s1*s2 - d*s1*s2 - s2^2 + 8*s1*s3 - 2*d*s1*s3 + 
     5*s2*s3 - d*s2*s3 - 4*s3^2 + d*s3^2)/
    (s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0}, 
  {0, 0, 0, 0, 0, (-4*(s1 - s2 - s3))/(s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), 0, -8/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
     s3^2), 0, 0, (4*(s1 + s2 - s3))/(s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), 0, (2*(-4*s1 + d*s1 - 4*s2 + d*s2 + 4*s3 - d*s3))/
    (s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-4*(-4 + d))/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 
   (-2*(-4*s1 + d*s1 + 4*s2 - d*s2 + 4*s3 - d*s3))/
    (s2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (6*s1 - d*s1 - 6*s2 + d*s2 + 6*s3 - d*s3)/(s1^2 - 2*s1*s2 + s2^2 - 
     2*s1*s3 - 2*s2*s3 + s3^2)}}, {{(-3 + d)/s3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, (-4 + d)/(2*s3), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, (8*s1 - 3*d*s1 - 8*s2 + 3*d*s2 + 8*s3 - 3*d*s3)/
    (2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   ((-8 + 3*d)*(s1 - s2 - s3))/(2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), 0, (-4*s1^2 + d*s1^2 + 8*s1*s2 - 2*d*s1*s2 - 4*s2^2 + 
     d*s2^2 + 12*s1*s3 - 3*d*s1*s3 + 12*s2*s3 - 3*d*s2*s3 - 8*s3^2 + 
     2*d*s3^2)/(2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (4*s1*s2 - d*s1*s2)/((-3 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, (-240*s1 + 242*d*s1 - 81*d^2*s1 + 9*d^3*s1 + 240*s2 - 242*d*s2 + 
     81*d^2*s2 - 9*d^3*s2 + 240*s3 - 242*d*s3 + 81*d^2*s3 - 9*d^3*s3)/
    (2*(-4 + d)*s2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (240*s1 - 242*d*s1 + 81*d^2*s1 - 9*d^3*s1 - 240*s2 + 242*d*s2 - 
     81*d^2*s2 + 9*d^3*s2 + 240*s3 - 242*d*s3 + 81*d^2*s3 - 9*d^3*s3)/
    (2*(-4 + d)*s1*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 
   (30 - 19*d + 3*d^2)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 
   (-4*s1^2 + d*s1^2 + 8*s1*s2 - 2*d*s1*s2 - 4*s2^2 + d*s2^2 - 2*s1*s3 + 
     d*s1*s3 - 2*s2*s3 + d*s2*s3 + 6*s3^2 - 2*d*s3^2)/
    (2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0}, {((8 - 3*d)*(s1 - s2 + s3))/
    (2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 
   (-8 + 3*d)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 0, 0, 0, 
   ((4 - d)*(s1 + s2 - s3))/(2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), -(s1*(-4*s1 + d*s1 + 4*s2 - d*s2 + 4*s3 - d*s3))/
    (2*(-3 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 
   0, 0, 0, 0, 0}, {(-240 + 242*d - 81*d^2 + 9*d^3)/
    ((-4 + d)*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 
   -((-240 + 242*d - 81*d^2 + 9*d^3)*(s1 - s2 + s3))/
    (2*(-4 + d)*s1*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 
   0, 0, (30*s1 - 19*d*s1 + 3*d^2*s1 - 30*s2 + 19*d*s2 - 3*d^2*s2 - 30*s3 + 
     19*d*s3 - 3*d^2*s3)/(2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), (-8*s1^2 + 2*d*s1^2 + 16*s1*s2 - 4*d*s1*s2 - 8*s2^2 + 
     2*d*s2^2 + 6*s1*s3 - d*s1*s3 + 6*s2*s3 - d*s2*s3 + 2*s3^2 - d*s3^2)/
    (2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, (-4 + d)/(2*s3), 0, 0, 0, 0, 0, 0, 0}, 
  {(-8*s1 + 3*d*s1 + 8*s2 - 3*d*s2 + 8*s3 - 3*d*s3)/
    (2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-8 + 3*d)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 0, 0, 0, 0, 
   0, 0, 0, (4*s1 - d*s1 + 4*s2 - d*s2 - 4*s3 + d*s3)/
    (2*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-4*s1*s2 + d*s1*s2 + 4*s2^2 - d*s2^2 - 4*s2*s3 + d*s2*s3)/
    (2*(-3 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 
   0, 0}, {(-240 + 242*d - 81*d^2 + 9*d^3)/
    ((-4 + d)*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-240*s1 + 242*d*s1 - 81*d^2*s1 + 9*d^3*s1 + 240*s2 - 242*d*s2 + 
     81*d^2*s2 - 9*d^3*s2 + 240*s3 - 242*d*s3 + 81*d^2*s3 - 9*d^3*s3)/
    (2*(-4 + d)*s2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 
   0, 0, 0, 0, 0, 0, (-30*s1 + 19*d*s1 - 3*d^2*s1 + 30*s2 - 19*d*s2 + 
     3*d^2*s2 - 30*s3 + 19*d*s3 - 3*d^2*s3)/
    (2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-8*s1^2 + 2*d*s1^2 + 16*s1*s2 - 4*d*s1*s2 - 8*s2^2 + 2*d*s2^2 + 6*s1*s3 - 
     d*s1*s3 + 6*s2*s3 - d*s2*s3 + 2*s3^2 - d*s3^2)/
    (2*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 
  {0, 0, 0, (-2*(9*s1 - 6*d*s1 + d^2*s1 - 9*s2 + 6*d*s2 - d^2*s2 + 9*s3 - 
      6*d*s3 + d^2*s3))/((-4 + d)*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), (30*s1 - 19*d*s1 + 3*d^2*s1 - 30*s2 + 19*d*s2 - 
     3*d^2*s2 + 30*s3 - 19*d*s3 + 3*d^2*s3)/
    ((-4 + d)*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (s1^2 - s1*s2 - s1*s3)/(s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), (30*s1 - 19*d*s1 + 3*d^2*s1 - 30*s2 + 19*d*s2 - 3*d^2*s2 + 
     30*s3 - 19*d*s3 + 3*d^2*s3)/((-4 + d)*s3*(s1^2 - 2*s1*s2 + s2^2 - 
      2*s1*s3 - 2*s2*s3 + s3^2)), (2*s1)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
     2*s2*s3 + s3^2), 0, 0, 0, 0, (-4*s1^2 + d*s1^2 + 8*s1*s2 - 2*d*s1*s2 - 
     4*s2^2 + d*s2^2 + 5*s1*s3 - d*s1*s3 + 5*s2*s3 - d*s2*s3 - s3^2)/
    (s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 0}, 
  {0, 0, 0, 0, (-30*s1 + 19*d*s1 - 3*d^2*s1 + 30*s2 - 19*d*s2 + 3*d^2*s2 + 
     30*s3 - 19*d*s3 + 3*d^2*s3)/((-4 + d)*s3*(s1^2 - 2*s1*s2 + s2^2 - 
      2*s1*s3 - 2*s2*s3 + s3^2)), (-(s1*s2) + s2^2 - s2*s3)/
    (s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 
   (2*(9*s1 - 6*d*s1 + d^2*s1 - 9*s2 + 6*d*s2 - d^2*s2 - 9*s3 + 6*d*s3 - 
      d^2*s3))/((-4 + d)*s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), (-30*s1 + 19*d*s1 - 3*d^2*s1 + 30*s2 - 19*d*s2 + 3*d^2*s2 + 
     30*s3 - 19*d*s3 + 3*d^2*s3)/((-4 + d)*s3*(s1^2 - 2*s1*s2 + s2^2 - 
      2*s1*s3 - 2*s2*s3 + s3^2)), (2*s2)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
     2*s2*s3 + s3^2), 0, 0, (-4*s1^2 + d*s1^2 + 8*s1*s2 - 2*d*s1*s2 - 
     4*s2^2 + d*s2^2 + 5*s1*s3 - d*s1*s3 + 5*s2*s3 - d*s2*s3 - s3^2)/
    (s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0}, 
  {0, 0, 0, 0, 0, 0, (-2*(30 - 19*d + 3*d^2))/
    ((-4 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-s1 + s2 - s3)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 0, 
   (-2*(30 - 19*d + 3*d^2))/((-4 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), (s1 - s2 - s3)/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
     2*s2*s3 + s3^2), (4*(9 - 6*d + d^2))/
    ((-4 + d)*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 0, 0, 
   (-3*s1 + d*s1 - 3*s2 + d*s2 + 3*s3 - d*s3)/(s1^2 - 2*s1*s2 + s2^2 - 
     2*s1*s3 - 2*s2*s3 + s3^2), 0}, {0, 0, 0, 0, 0, 
   -8/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 0, 
   (4*(-s1 + s2 + s3))/(s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + 
      s3^2)), 0, 0, (4*(s1 - s2 + s3))/(s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 
      2*s2*s3 + s3^2)), 0, (-2*(4*s1 - d*s1 - 4*s2 + d*s2 + 4*s3 - d*s3))/
    (s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-2*(-4*s1 + d*s1 + 4*s2 - d*s2 + 4*s3 - d*s3))/
    (s3*(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2)), 
   (-4*(-4 + d))/(s1^2 - 2*s1*s2 + s2^2 - 2*s1*s3 - 2*s2*s3 + s3^2), 
   (6*s1 - d*s1 + 6*s2 - d*s2 - 6*s3 + d*s3)/(s1^2 - 2*s1*s2 + s2^2 - 
     2*s1*s3 - 2*s2*s3 + s3^2)}}}
